services:
  app:
    image: gitea/gitea:latest
    restart: always
    hostname: gitea
    container_name: gitea
    environment:
      - USER_UID=${USER_UID}
      - USER_GID=${USER_GID}
      - GITEA__server__SSH_PORT=${GITEA_SSH_PORT}
      - GITEA__server__SSH_LISTEN_PORT=${GITEA_SSH_LISTEN_PORT}
      - GITEA__database__DB_TYPE=${GITEA_DB_TYPE}
      - GITEA__database__HOST=${GITEA_DB_HOST}
      - GITEA__database__NAME=${GITEA_DB_NAME}
      - GITEA__database__USER=${GITEA_DB_USER}
      - GITEA__database__PASSWD=${GITEA_DB_PASSWD}
      - GITEA__session__PROVIDER=${GITEA_SESSION_PROVIDER}
      - GITEA__session__PROVIDER_CONFIG=${GITEA_SESSION_PROVIDER_CONFIG}
      - GITEA__service__DISABLE_REGISTRATION=${GITEA_DISABLE_REGISTRATION}
      - GITEA__service__REQUIRE_SIGNIN_VIEW=${GITEA_REQUIRE_SIGNIN_VIEW}
      - GITEA__openid__ENABLE_OPENID_SIGNIN=${GITEA_ENABLE_OPENID_SIGNIN}
      - GITEA__openid__ENABLE_OPENID_SIGNUP=${GITEA_ENABLE_OPENID_SIGNUP}
    volumes:
      - gitea-data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - redis-socket:/var/run/redis
    networks:
      - frontend
      - backend
    ports:
      - ${GITEA_HTTP_PORT}:${GITEA_HTTP_PORT}
      - ${GITEA_SSH_PORT}:${GITEA_SSH_PORT}
    depends_on:
      - db
      - redis
    labels:
      - "autoheal=true"
    healthcheck:
      test: [ "CMD", "nc", "-zv", "localhost", "${GITEA_HTTP_PORT}" ]
      interval: 30s
      timeout: 10s
      retries: 3

  db:
    image: postgres:latest
    restart: always
    hostname: postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend
    labels:
      - "autoheal=true"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  redis:
    image: redis:alpine
    restart: always
    hostname: redis
    container_name: redis
    command: [ "sh", "-c", "chown redis:redis /var/run/redis && redis-server /usr/local/etc/redis/redis.conf" ]
    volumes:
      - ./docker/conf/redis/redis.conf:/usr/local/etc/redis/redis.conf
      - redis-socket:/var/run/redis
      - redis-data:/data
    networks:
      - backend
    labels:
      - "autoheal=true"
    healthcheck:
      test: [ "CMD", "redis-cli", "-s", "/var/run/redis/redis.sock", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3

  autoheal:
    image: willfarrell/autoheal
    restart: always
    hostname: autoheal
    container_name: autoheal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    networks:
      - backend

  docker-socket-proxy:
    image: tecnativa/docker-socket-proxy
    restart: always
    hostname: docker-socket-proxy
    container_name: docker-socket-proxy
    environment:
      CONTAINERS: 1
      NETWORKS: 1
      SERVICES: 1
      TASKS: 1
      EVENTS: 1
    networks:
      - backend
    ports:
      - ${DSP_PORT}:${DSP_PORT}
    healthcheck:
      test: [ "CMD", "nc", "-zv", "localhost", "${DSP_PORT}" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

volumes:
  gitea-data:
  postgres-data:
  redis-socket:
  redis-data:

networks:
  frontend:
    external: false
  backend:
    internal: true